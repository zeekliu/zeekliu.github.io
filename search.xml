<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python 入门笔记</title>
      <link href="/python/python-1.html"/>
      <url>/python/python-1.html</url>
      
        <content type="html"><![CDATA[<p>学了 C++，感觉 Python 真的要容易很多，当然跟 C++ 比起来，也有些看似语法比较奇怪的地方，当然，习惯了就好。</p><p>下面来逐条“盘点”。</p><h3 id="1-输入输出"><a class="markdownIt-Anchor" href="#1-输入输出"></a> 1  输入输出</h3><p>Python 的输入输出真的很简单，很 simple。</p><p>输入一个整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 写为：</p><pre class="highlight"><code class="py">x=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>())</code></pre><p>而多个整数的输入写为：</p><pre class="highlight"><code class="py">x,y=<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>,<span class="hljs-built_in">input</span>().split())</code></pre><p>多个整数的输入格式不能用来输入一个整数，反之亦然。</p><p>如果类型不是 <code>int</code> 呢？比如 <code>float</code>，写法如下：</p><pre class="highlight"><code class="py">x=<span class="hljs-built_in">float</span>(<span class="hljs-built_in">input</span>())x,y=<span class="hljs-built_in">map</span>(<span class="hljs-built_in">float</span>,<span class="hljs-built_in">input</span>().split())</code></pre><p>跟 C++ 不同，Python 中无需辨别 <code>int</code> ，<code>long</code>，<code>long long</code> 的区别，也无需辨别 <code>float</code> 和 <code>double</code>。</p><p>输出也不难，比如输出一个数，有两种写法：</p><pre class="highlight"><code class="py"><span class="hljs-built_in">print</span>(<span class="hljs-number">0</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">"0"</span>)</code></pre><p>第一种由于是数字，程序可直接识别为数字输出；第二种则以字符串输出，效果一样。</p><p>输出字符串也很简单，比如输出 <code>Hello World!</code>：</p><pre class="highlight"><code class="py"><span class="hljs-built_in">print</span>(<span class="hljs-string">"Hello World!"</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">'Hello World!'</span>)</code></pre><p>程序无法正常识别英语字母，因此需要引号，单双引号均可。</p><p>不过，有时我们要控制输出格式，此时要写成类似这样：</p><pre class="highlight"><code class="py"><span class="hljs-built_in">print</span>(<span class="hljs-string">"%.2f"</span>%(x))<span class="hljs-built_in">print</span>(<span class="hljs-string">"Number = %d"</span>%(x**y))<span class="hljs-built_in">print</span>(<span class="hljs-string">"%d %% %d"</span>%(x,y))</code></pre><p>第 1 行则表示将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 以保留两位小数的形式输出，<code>%</code> 表示替换内容的开始，将其嵌入字符串中并在后面写上值，即可达到“自定义输出格式”的作用。<code>.2</code> 表示以保留两位小数的形式输出，保留三位小数则写为：<code>%.3f</code>。</p><p>第 2 行则是一个数字嵌入字符串输出的例子。</p><p>第 3 行内容中，如果要在输出中使用正常意义的百分号，需要写为 <code>%%</code>，以与类型控制符做区分。</p><p>Python 在两个 <code>print</code> 间默认换行，因此无需添加额外换行。</p><hr><h3 id="2-简单数值运算"><a class="markdownIt-Anchor" href="#2-简单数值运算"></a> 2  简单数值运算</h3><p>Python 中最基础的运算有：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo></mrow><annotation encoding="application/x-tex">-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo></mrow><annotation encoding="application/x-tex">*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">//</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">**</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord">∗</span></span></span></span> 七种。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mo separator="true">,</mo><mo>−</mo><mo separator="true">,</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">+,-,*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord">+</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∗</span></span></span></span> 很好理解，不再赘述。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">/</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span></span></span></span> 代表普通除法，即可以除出来小数的那种。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi></mrow><annotation encoding="application/x-tex">//</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">/</span><span class="mord">/</span></span></span></span> 代表整除，向下取整，丢掉余数。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span></span></span></span> 代表取余（模运算），即算出两数相除的余数。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo><mo>∗</mo></mrow><annotation encoding="application/x-tex">**</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span><span class="mord">∗</span></span></span></span> 代表幂运算，即算出以前一个数为底数，后一个数为指数的结果。</p><p><strong>特别注意：等号写作：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">==</mtext></mrow><annotation encoding="application/x-tex">\texttt{==}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.41562em;vertical-align:0em;"></span><span class="mord text"><span class="mord texttt">==</span></span></span></span></span>，两个等号！不等号写作：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext mathvariant="monospace">!=</mtext><mtext>。</mtext></mrow><annotation encoding="application/x-tex">\texttt{!=}。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord texttt">!=</span></span><span class="mord cjk_fallback">。</span></span></span></span></strong></p><p>举一些例子：</p><pre class="highlight"><code class="text">1+2==310-4==63*7==216/4==1.56/4==17%3==12**5=32</code></pre><p>还是比较好懂的。</p><p>除以以外还可以添加括号，括号全部为小括号：<code>()</code>，没有中括号和大括号，括号可以多层嵌套。</p><p>括号的运算顺序与数学中一样，按从内到外的顺序运算。</p><p>至于做题，做题时需要将题目中的问题抽象成算式进行计算，难度不大。</p><hr><h3 id="3-逻辑运算"><a class="markdownIt-Anchor" href="#3-逻辑运算"></a> 3  逻辑运算</h3><p>逻辑运算也不难，一般只使用两个：<code>and</code>，<code>or</code>。</p><p>意思很容易理解，直接举例：</p><pre class="highlight"><code class="text">A and BA or B(A and B) and C(A or B) and C(A or B) or C(A and B) or CA and B and CA or B or C</code></pre><p>第 1 行的意思即为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 都包含。</p><p>第 2 行的意思即为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 其中一个包含。</p><p>第 3~6 行的意思可以很容易推断出来（括号内的内容先运算），如第 4 行就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 的其中一个与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 包含，也就是说要么是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">A,C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 包含，要么是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo separator="true">,</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">B,C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 包含。</p><p>一般情况下建议全部加上括号，但在同一个运算并列时（如第 7,8 行）省略括号也不会出错。</p><hr>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐：《线性代数的艺术》—— 史上最易懂的线性代数讲义</title>
      <link href="/math/the-art-of-linear-algebra.html"/>
      <url>/math/the-art-of-linear-algebra.html</url>
      
        <content type="html"><![CDATA[<p><strong>讲义属实很不错，图片较多，易于理解，内含讲义 PDF。</strong></p><!--more---><p>线性代数讲义，12 页，不算长，但讲解的很清楚。</p><blockquote><p>作者：Kenji Hiranabe（けんじひらなべ）</p><p>帮助者：Gilbert Strang</p><p>翻译者：Kefang Liu</p></blockquote><h4 id="本站-pdf"><a class="markdownIt-Anchor" href="#本站-pdf"></a> 本站 PDF：</h4><p>本站存档：<a href="/pdf/The-Art-of-Linear-Algebra-zh-CN.pdf">线性代数的艺术：中文版本</a></p><p>本站存档：<a href="/pdf/The-Art-of-Linear-Algebra.pdf">The Art of Linear Algebra: English Edition</a></p><p>日语版就不推了，有兴趣可以自己看。</p><h4 id="github-repositories"><a class="markdownIt-Anchor" href="#github-repositories"></a> GitHub Repositories:</h4><p>GitHub (jp)：<a href="https://github.com/kf-liu/The-Art-of-Linear-Algebra-zh-CN/blob/main/The-Art-of-Linear-Algebra-j.pdf">https://github.com/kf-liu/The-Art-of-Linear-Algebra-zh-CN/blob/main/The-Art-of-Linear-Algebra-j.pdf</a></p><p>GihHub (zh-CN)：<a href="https://github.com/kf-liu/The-Art-of-Linear-Algebra-zh-CN/blob/main/The-Art-of-Linear-Algebra-zh-CN.pdf">https://github.com/kf-liu/The-Art-of-Linear-Algebra-zh-CN/blob/main/The-Art-of-Linear-Algebra-zh-CN.pdf</a></p><p>GitHub (en)：<a href="https://github.com/kf-liu/The-Art-of-Linear-Algebra-zh-CN/blob/main/The-Art-of-Linear-Algebra.pdf">https://github.com/kf-liu/The-Art-of-Linear-Algebra-zh-CN/blob/main/The-Art-of-Linear-Algebra.pdf</a></p><hr><p>总之，通俗易懂，是一篇很棒的讲义，值得一看。</p>]]></content>
      
      
      <categories>
          
          <category> math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Code Test</title>
      <link href="/test/code.html"/>
      <url>/test/code.html</url>
      
        <content type="html"><![CDATA[<pre class="highlight"><code class="cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-number">0</span>);    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>); cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);    <span class="hljs-type">int</span> n;    cin&gt;&gt;n;    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) n*=n;    <span class="hljs-keyword">while</span> (n==<span class="hljs-number">0</span>) { <span class="hljs-keyword">break</span>; <span class="hljs-keyword">continue</span>; }    cout&lt;&lt;n&lt;&lt;endl;    string s=<span class="hljs-string">"string"</span>;    <span class="hljs-type">char</span> c=<span class="hljs-string">'c'</span>;    n=<span class="hljs-built_in">min</span>(n,<span class="hljs-number">0</span>)    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%f\n"</span>,n);    <span class="hljs-comment">/* Comment 注释 */</span>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);}</code></pre><!--more---><pre class="highlight"><code class="textile">GitHub PagesZeekliu</code></pre>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密文章测试</title>
      <link href="/test/password-test.html"/>
      <url>/test/password-test.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="afbc6f11416c0285a9e937867ac857fc494bb98dd345cc79d4cc1cc753640766">4630436162ade97ba2718b7d0c4b3b633edd16a8c78b7d4a375abf0237cd065b91751a61765f7ac56f2dc754cdc59bdece543ea5ee84c32a642bd093fac58456166e8b1de82ce87419a1d480cbddd0f9cf3454f804e92ac679db44e150c064862fc372d750ef0da47ab0f5dd257187b7714242dab0e616bf97cc13633d23f548</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Test</title>
      <link href="/test/test.html"/>
      <url>/test/test.html</url>
      
        <content type="html"><![CDATA[<p>Test</p><!--more---><h5 id="title"><a class="markdownIt-Anchor" href="#title"></a> Title</h5><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>+</mo><mn>1</mn><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">1+1=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></p><p><strong>123</strong></p><p><em>GitHub</em></p><blockquote><p>Pages</p></blockquote><ol><li><p>B</p></li><li><p>L</p></li><li><p>O</p></li><li><p>G</p></li></ol><pre class="highlight"><code class="cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{}</code></pre>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
